$offcanvas : (
    "start" : start,
    "end" : end ,
);
$offcanvas-sizes : (
    "Default" : 350px,
    "lg" : 500px,
    "sm" : 200px,
);
// offcanvas Template

@mixin offcanvas($color : #f4f4f4,$direction,$size){
    position: fixed;
    display: none;
    width: 100%;
    height: 100%;
    top : 0;
    @if ($direction == start){
        left: 0;
    }
    @if ($direction == end){
        right: 0;
    }
    background-color: rgba(0,0,0,0.5);

    .offcanvas-content {
        top : 0;
        @if ($direction == start){
            left: 0;
            animation-name: offcanvasOpenStart;
        }
        @if ($direction == end){
            right: 0;
            animation-name: offcanvasOpenEnd;
        }
        position: absolute;
        height: 100vh;
        width: $size;
        background-color: $color;
        animation-duration: 1s;
        overflow: auto;
    }
}

// building Default offcanvas

@each $key , $val in $offcanvas {
    @each $size , $valSize in $offcanvas-sizes {
        @if ($size == Default){
            .offcanvas-#{$key} {
                @include offcanvas(#f4f4f4,$val,$valSize)
            }
        }@else {
            .offcanvas-#{$key}-#{$size} {
                @include offcanvas(#f4f4f4,$val,$valSize)
            }
        }

    }
}

// building colorize offcanvas

@each $key , $val in $colors {
    @each $direction , $valDirection in $offcanvas {
        @each $size , $valSize in $offcanvas-sizes {
            @if ($size == Default){
                .offcanvas-#{$key}-#{$direction} {
                    @include offcanvas($val,$valDirection,$valSize)
                }
            }@else {
                .offcanvas-#{$key}-#{$direction}-#{$size} {
                    @include offcanvas($val,$valDirection,$valSize)
                }
            }
    
        }
    }
}

@keyframes offcanvasOpenStart {
    from {
      opacity: 0;
      transform: translateX(-300px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  @keyframes offcanvasOpenEnd {
    from {
      opacity: 0;
      transform: translateX(+300px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }