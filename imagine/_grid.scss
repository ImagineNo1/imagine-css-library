@use 'sass:math';

//containers 

@mixin ctn ($max-width) {
    width : 100%;
    max-width: $max-width;
    margin: 0 auto;
    padding: 0 20px;
    box-sizing: border-box;
}

$containers : (
    "default" : 960px,
    "sm" : 480px,
    "md" : 720px,
    "lg" : 960px,
    "xl" : 1200px,
    "xxl" : 1440px,
);

@each $key , $val in $containers {
    @if($key == default){
        .container {
            @include ctn($val)
        }
    }@else{
        .container-#{$key} {
            @include ctn($val)
        }
    }
}

// gap system 

$gap : (
    "0" : 0,
    "1" : 10px,
    "2" : 20px,
    "3" : 30px,
);

@each $key , $val in $gap {
    .gap-#{$key} > * {
        padding: $val;
    }
    .gap-#{$key} {
        margin-left: -$val;
        margin-right: -$val;
    }
}

// layouts 

$layouts : (
    "center": center,
    "start" : start,
    "end" : end ,
    "between" : space-between,
    "around" : space-around,
);

@each $key , $val in $layouts {
    .justify-content-#{$key} {
        justify-content: $val;
    }
}

// grid system 

$grid-columns : 12;

.row {
    display: flex;
    flex-flow: row wrap;
}

@include xs {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-xs {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100% , $grid-columns);
        }
    }
}
@include sm {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-sm {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100% , $grid-columns);
        }
    }
}
@include md {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-md {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100% , $grid-columns);
        }
    }
}
@include lg {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-lg {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100% , $grid-columns);
        }
    }
}
@include xl {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-xl {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100% , $grid-columns);
        }
    }
}